/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessToken', 'model/Account', 'model/AccountCore', 'model/AccountOverview', 'model/AdvancedOptions', 'model/Automated', 'model/Body', 'model/BodyPart', 'model/BouncedCategorySummary', 'model/Campaign', 'model/CampaignBody', 'model/CampaignListPayload', 'model/CampaignOptions', 'model/CampaignRecipient', 'model/CampaignTemplate', 'model/Channel', 'model/Contact', 'model/ContactHistory', 'model/ContactPayload', 'model/ContactStats', 'model/ContactUnsubscribeReasonCounts', 'model/ContactUpdatePayload', 'model/DailyLogStatusSummary', 'model/DomainDetail', 'model/DomainPayload', 'model/Email', 'model/EmailCredits', 'model/EmailJobFailedStatus', 'model/EmailJobStatus', 'model/EmailMergeMessage', 'model/EmailSend', 'model/EmailStatus', 'model/EmailTransactionalMessage', 'model/EmailView', 'model/EmailsPayload', 'model/EncodingSettings', 'model/EventLog', 'model/ExportLink', 'model/File', 'model/InboundOptions', 'model/List', 'model/ListPayload', 'model/ListUpdatePayload', 'model/Log', 'model/LogStatusSummary', 'model/LogSummary', 'model/LoginPayload', 'model/LoginResponse', 'model/MergeRecipient', 'model/MessageAttachment', 'model/ModelExport', 'model/MoveToListPayload', 'model/NameTypeCampaign', 'model/Options', 'model/Payment', 'model/Pool', 'model/Profile', 'model/QuickAddPayload', 'model/RandomListPayload', 'model/Recipient', 'model/RecipientEvent', 'model/Referral', 'model/ReputationDetail', 'model/ReputationHistory', 'model/ReputationImpact', 'model/SMS', 'model/Segment', 'model/SegmentHistory', 'model/SegmentPayload', 'model/Sender', 'model/SpamCheck', 'model/SpamRule', 'model/SplitCampaign', 'model/SplitOptions', 'model/SubAccount', 'model/SubAccountSettings', 'model/SubaccountCreditsPayload', 'model/SubaccountPayload', 'model/Template', 'model/TrackingOptions', 'model/TransactionalRecipient', 'model/TriggerData', 'model/TriggerOptions', 'model/UsageData', 'model/UtmTracking', 'model/Webhook', 'model/WebhookPayload', 'api/AccountsApi', 'api/AuthApi', 'api/CampaignsApi', 'api/ChannelsApi', 'api/ContactsApi', 'api/DomainsApi', 'api/EmailsApi', 'api/FilesApi', 'api/ListsApi', 'api/PoolsApi', 'api/ReportsApi', 'api/SMSApi', 'api/SecurityApi', 'api/SegmentsApi', 'api/SubaccountsApi', 'api/TasksApi', 'api/TemplatesApi', 'api/WebhooksApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessToken'), require('./model/Account'), require('./model/AccountCore'), require('./model/AccountOverview'), require('./model/AdvancedOptions'), require('./model/Automated'), require('./model/Body'), require('./model/BodyPart'), require('./model/BouncedCategorySummary'), require('./model/Campaign'), require('./model/CampaignBody'), require('./model/CampaignListPayload'), require('./model/CampaignOptions'), require('./model/CampaignRecipient'), require('./model/CampaignTemplate'), require('./model/Channel'), require('./model/Contact'), require('./model/ContactHistory'), require('./model/ContactPayload'), require('./model/ContactStats'), require('./model/ContactUnsubscribeReasonCounts'), require('./model/ContactUpdatePayload'), require('./model/DailyLogStatusSummary'), require('./model/DomainDetail'), require('./model/DomainPayload'), require('./model/Email'), require('./model/EmailCredits'), require('./model/EmailJobFailedStatus'), require('./model/EmailJobStatus'), require('./model/EmailMergeMessage'), require('./model/EmailSend'), require('./model/EmailStatus'), require('./model/EmailTransactionalMessage'), require('./model/EmailView'), require('./model/EmailsPayload'), require('./model/EncodingSettings'), require('./model/EventLog'), require('./model/ExportLink'), require('./model/File'), require('./model/InboundOptions'), require('./model/List'), require('./model/ListPayload'), require('./model/ListUpdatePayload'), require('./model/Log'), require('./model/LogStatusSummary'), require('./model/LogSummary'), require('./model/LoginPayload'), require('./model/LoginResponse'), require('./model/MergeRecipient'), require('./model/MessageAttachment'), require('./model/ModelExport'), require('./model/MoveToListPayload'), require('./model/NameTypeCampaign'), require('./model/Options'), require('./model/Payment'), require('./model/Pool'), require('./model/Profile'), require('./model/QuickAddPayload'), require('./model/RandomListPayload'), require('./model/Recipient'), require('./model/RecipientEvent'), require('./model/Referral'), require('./model/ReputationDetail'), require('./model/ReputationHistory'), require('./model/ReputationImpact'), require('./model/SMS'), require('./model/Segment'), require('./model/SegmentHistory'), require('./model/SegmentPayload'), require('./model/Sender'), require('./model/SpamCheck'), require('./model/SpamRule'), require('./model/SplitCampaign'), require('./model/SplitOptions'), require('./model/SubAccount'), require('./model/SubAccountSettings'), require('./model/SubaccountCreditsPayload'), require('./model/SubaccountPayload'), require('./model/Template'), require('./model/TrackingOptions'), require('./model/TransactionalRecipient'), require('./model/TriggerData'), require('./model/TriggerOptions'), require('./model/UsageData'), require('./model/UtmTracking'), require('./model/Webhook'), require('./model/WebhookPayload'), require('./api/AccountsApi'), require('./api/AuthApi'), require('./api/CampaignsApi'), require('./api/ChannelsApi'), require('./api/ContactsApi'), require('./api/DomainsApi'), require('./api/EmailsApi'), require('./api/FilesApi'), require('./api/ListsApi'), require('./api/PoolsApi'), require('./api/ReportsApi'), require('./api/SMSApi'), require('./api/SecurityApi'), require('./api/SegmentsApi'), require('./api/SubaccountsApi'), require('./api/TasksApi'), require('./api/TemplatesApi'), require('./api/WebhooksApi'));
  }
}(function(ApiClient, AccessToken, Account, AccountCore, AccountOverview, AdvancedOptions, Automated, Body, BodyPart, BouncedCategorySummary, Campaign, CampaignBody, CampaignListPayload, CampaignOptions, CampaignRecipient, CampaignTemplate, Channel, Contact, ContactHistory, ContactPayload, ContactStats, ContactUnsubscribeReasonCounts, ContactUpdatePayload, DailyLogStatusSummary, DomainDetail, DomainPayload, Email, EmailCredits, EmailJobFailedStatus, EmailJobStatus, EmailMergeMessage, EmailSend, EmailStatus, EmailTransactionalMessage, EmailView, EmailsPayload, EncodingSettings, EventLog, ExportLink, File, InboundOptions, List, ListPayload, ListUpdatePayload, Log, LogStatusSummary, LogSummary, LoginPayload, LoginResponse, MergeRecipient, MessageAttachment, ModelExport, MoveToListPayload, NameTypeCampaign, Options, Payment, Pool, Profile, QuickAddPayload, RandomListPayload, Recipient, RecipientEvent, Referral, ReputationDetail, ReputationHistory, ReputationImpact, SMS, Segment, SegmentHistory, SegmentPayload, Sender, SpamCheck, SpamRule, SplitCampaign, SplitOptions, SubAccount, SubAccountSettings, SubaccountCreditsPayload, SubaccountPayload, Template, TrackingOptions, TransactionalRecipient, TriggerData, TriggerOptions, UsageData, UtmTracking, Webhook, WebhookPayload, AccountsApi, AuthApi, CampaignsApi, ChannelsApi, ContactsApi, DomainsApi, EmailsApi, FilesApi, ListsApi, PoolsApi, ReportsApi, SMSApi, SecurityApi, SegmentsApi, SubaccountsApi, TasksApi, TemplatesApi, WebhooksApi) {
  'use strict';

  /**
   * Send_your_emails_with_ElasticEmail_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ElasticemailRestfulApi = require('index'); // See note below*.
   * var xxxSvc = new ElasticemailRestfulApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ElasticemailRestfulApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ElasticemailRestfulApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ElasticemailRestfulApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 3.0.0b
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken: AccessToken,
    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account: Account,
    /**
     * The AccountCore model constructor.
     * @property {module:model/AccountCore}
     */
    AccountCore: AccountCore,
    /**
     * The AccountOverview model constructor.
     * @property {module:model/AccountOverview}
     */
    AccountOverview: AccountOverview,
    /**
     * The AdvancedOptions model constructor.
     * @property {module:model/AdvancedOptions}
     */
    AdvancedOptions: AdvancedOptions,
    /**
     * The Automated model constructor.
     * @property {module:model/Automated}
     */
    Automated: Automated,
    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body: Body,
    /**
     * The BodyPart model constructor.
     * @property {module:model/BodyPart}
     */
    BodyPart: BodyPart,
    /**
     * The BouncedCategorySummary model constructor.
     * @property {module:model/BouncedCategorySummary}
     */
    BouncedCategorySummary: BouncedCategorySummary,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignBody model constructor.
     * @property {module:model/CampaignBody}
     */
    CampaignBody: CampaignBody,
    /**
     * The CampaignListPayload model constructor.
     * @property {module:model/CampaignListPayload}
     */
    CampaignListPayload: CampaignListPayload,
    /**
     * The CampaignOptions model constructor.
     * @property {module:model/CampaignOptions}
     */
    CampaignOptions: CampaignOptions,
    /**
     * The CampaignRecipient model constructor.
     * @property {module:model/CampaignRecipient}
     */
    CampaignRecipient: CampaignRecipient,
    /**
     * The CampaignTemplate model constructor.
     * @property {module:model/CampaignTemplate}
     */
    CampaignTemplate: CampaignTemplate,
    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel: Channel,
    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact: Contact,
    /**
     * The ContactHistory model constructor.
     * @property {module:model/ContactHistory}
     */
    ContactHistory: ContactHistory,
    /**
     * The ContactPayload model constructor.
     * @property {module:model/ContactPayload}
     */
    ContactPayload: ContactPayload,
    /**
     * The ContactStats model constructor.
     * @property {module:model/ContactStats}
     */
    ContactStats: ContactStats,
    /**
     * The ContactUnsubscribeReasonCounts model constructor.
     * @property {module:model/ContactUnsubscribeReasonCounts}
     */
    ContactUnsubscribeReasonCounts: ContactUnsubscribeReasonCounts,
    /**
     * The ContactUpdatePayload model constructor.
     * @property {module:model/ContactUpdatePayload}
     */
    ContactUpdatePayload: ContactUpdatePayload,
    /**
     * The DailyLogStatusSummary model constructor.
     * @property {module:model/DailyLogStatusSummary}
     */
    DailyLogStatusSummary: DailyLogStatusSummary,
    /**
     * The DomainDetail model constructor.
     * @property {module:model/DomainDetail}
     */
    DomainDetail: DomainDetail,
    /**
     * The DomainPayload model constructor.
     * @property {module:model/DomainPayload}
     */
    DomainPayload: DomainPayload,
    /**
     * The Email model constructor.
     * @property {module:model/Email}
     */
    Email: Email,
    /**
     * The EmailCredits model constructor.
     * @property {module:model/EmailCredits}
     */
    EmailCredits: EmailCredits,
    /**
     * The EmailJobFailedStatus model constructor.
     * @property {module:model/EmailJobFailedStatus}
     */
    EmailJobFailedStatus: EmailJobFailedStatus,
    /**
     * The EmailJobStatus model constructor.
     * @property {module:model/EmailJobStatus}
     */
    EmailJobStatus: EmailJobStatus,
    /**
     * The EmailMergeMessage model constructor.
     * @property {module:model/EmailMergeMessage}
     */
    EmailMergeMessage: EmailMergeMessage,
    /**
     * The EmailSend model constructor.
     * @property {module:model/EmailSend}
     */
    EmailSend: EmailSend,
    /**
     * The EmailStatus model constructor.
     * @property {module:model/EmailStatus}
     */
    EmailStatus: EmailStatus,
    /**
     * The EmailTransactionalMessage model constructor.
     * @property {module:model/EmailTransactionalMessage}
     */
    EmailTransactionalMessage: EmailTransactionalMessage,
    /**
     * The EmailView model constructor.
     * @property {module:model/EmailView}
     */
    EmailView: EmailView,
    /**
     * The EmailsPayload model constructor.
     * @property {module:model/EmailsPayload}
     */
    EmailsPayload: EmailsPayload,
    /**
     * The EncodingSettings model constructor.
     * @property {module:model/EncodingSettings}
     */
    EncodingSettings: EncodingSettings,
    /**
     * The EventLog model constructor.
     * @property {module:model/EventLog}
     */
    EventLog: EventLog,
    /**
     * The ExportLink model constructor.
     * @property {module:model/ExportLink}
     */
    ExportLink: ExportLink,
    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File: File,
    /**
     * The InboundOptions model constructor.
     * @property {module:model/InboundOptions}
     */
    InboundOptions: InboundOptions,
    /**
     * The List model constructor.
     * @property {module:model/List}
     */
    List: List,
    /**
     * The ListPayload model constructor.
     * @property {module:model/ListPayload}
     */
    ListPayload: ListPayload,
    /**
     * The ListUpdatePayload model constructor.
     * @property {module:model/ListUpdatePayload}
     */
    ListUpdatePayload: ListUpdatePayload,
    /**
     * The Log model constructor.
     * @property {module:model/Log}
     */
    Log: Log,
    /**
     * The LogStatusSummary model constructor.
     * @property {module:model/LogStatusSummary}
     */
    LogStatusSummary: LogStatusSummary,
    /**
     * The LogSummary model constructor.
     * @property {module:model/LogSummary}
     */
    LogSummary: LogSummary,
    /**
     * The LoginPayload model constructor.
     * @property {module:model/LoginPayload}
     */
    LoginPayload: LoginPayload,
    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse: LoginResponse,
    /**
     * The MergeRecipient model constructor.
     * @property {module:model/MergeRecipient}
     */
    MergeRecipient: MergeRecipient,
    /**
     * The MessageAttachment model constructor.
     * @property {module:model/MessageAttachment}
     */
    MessageAttachment: MessageAttachment,
    /**
     * The ModelExport model constructor.
     * @property {module:model/ModelExport}
     */
    ModelExport: ModelExport,
    /**
     * The MoveToListPayload model constructor.
     * @property {module:model/MoveToListPayload}
     */
    MoveToListPayload: MoveToListPayload,
    /**
     * The NameTypeCampaign model constructor.
     * @property {module:model/NameTypeCampaign}
     */
    NameTypeCampaign: NameTypeCampaign,
    /**
     * The Options model constructor.
     * @property {module:model/Options}
     */
    Options: Options,
    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment: Payment,
    /**
     * The Pool model constructor.
     * @property {module:model/Pool}
     */
    Pool: Pool,
    /**
     * The Profile model constructor.
     * @property {module:model/Profile}
     */
    Profile: Profile,
    /**
     * The QuickAddPayload model constructor.
     * @property {module:model/QuickAddPayload}
     */
    QuickAddPayload: QuickAddPayload,
    /**
     * The RandomListPayload model constructor.
     * @property {module:model/RandomListPayload}
     */
    RandomListPayload: RandomListPayload,
    /**
     * The Recipient model constructor.
     * @property {module:model/Recipient}
     */
    Recipient: Recipient,
    /**
     * The RecipientEvent model constructor.
     * @property {module:model/RecipientEvent}
     */
    RecipientEvent: RecipientEvent,
    /**
     * The Referral model constructor.
     * @property {module:model/Referral}
     */
    Referral: Referral,
    /**
     * The ReputationDetail model constructor.
     * @property {module:model/ReputationDetail}
     */
    ReputationDetail: ReputationDetail,
    /**
     * The ReputationHistory model constructor.
     * @property {module:model/ReputationHistory}
     */
    ReputationHistory: ReputationHistory,
    /**
     * The ReputationImpact model constructor.
     * @property {module:model/ReputationImpact}
     */
    ReputationImpact: ReputationImpact,
    /**
     * The SMS model constructor.
     * @property {module:model/SMS}
     */
    SMS: SMS,
    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment: Segment,
    /**
     * The SegmentHistory model constructor.
     * @property {module:model/SegmentHistory}
     */
    SegmentHistory: SegmentHistory,
    /**
     * The SegmentPayload model constructor.
     * @property {module:model/SegmentPayload}
     */
    SegmentPayload: SegmentPayload,
    /**
     * The Sender model constructor.
     * @property {module:model/Sender}
     */
    Sender: Sender,
    /**
     * The SpamCheck model constructor.
     * @property {module:model/SpamCheck}
     */
    SpamCheck: SpamCheck,
    /**
     * The SpamRule model constructor.
     * @property {module:model/SpamRule}
     */
    SpamRule: SpamRule,
    /**
     * The SplitCampaign model constructor.
     * @property {module:model/SplitCampaign}
     */
    SplitCampaign: SplitCampaign,
    /**
     * The SplitOptions model constructor.
     * @property {module:model/SplitOptions}
     */
    SplitOptions: SplitOptions,
    /**
     * The SubAccount model constructor.
     * @property {module:model/SubAccount}
     */
    SubAccount: SubAccount,
    /**
     * The SubAccountSettings model constructor.
     * @property {module:model/SubAccountSettings}
     */
    SubAccountSettings: SubAccountSettings,
    /**
     * The SubaccountCreditsPayload model constructor.
     * @property {module:model/SubaccountCreditsPayload}
     */
    SubaccountCreditsPayload: SubaccountCreditsPayload,
    /**
     * The SubaccountPayload model constructor.
     * @property {module:model/SubaccountPayload}
     */
    SubaccountPayload: SubaccountPayload,
    /**
     * The Template model constructor.
     * @property {module:model/Template}
     */
    Template: Template,
    /**
     * The TrackingOptions model constructor.
     * @property {module:model/TrackingOptions}
     */
    TrackingOptions: TrackingOptions,
    /**
     * The TransactionalRecipient model constructor.
     * @property {module:model/TransactionalRecipient}
     */
    TransactionalRecipient: TransactionalRecipient,
    /**
     * The TriggerData model constructor.
     * @property {module:model/TriggerData}
     */
    TriggerData: TriggerData,
    /**
     * The TriggerOptions model constructor.
     * @property {module:model/TriggerOptions}
     */
    TriggerOptions: TriggerOptions,
    /**
     * The UsageData model constructor.
     * @property {module:model/UsageData}
     */
    UsageData: UsageData,
    /**
     * The UtmTracking model constructor.
     * @property {module:model/UtmTracking}
     */
    UtmTracking: UtmTracking,
    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook: Webhook,
    /**
     * The WebhookPayload model constructor.
     * @property {module:model/WebhookPayload}
     */
    WebhookPayload: WebhookPayload,
    /**
     * The AccountsApi service constructor.
     * @property {module:api/AccountsApi}
     */
    AccountsApi: AccountsApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The CampaignsApi service constructor.
     * @property {module:api/CampaignsApi}
     */
    CampaignsApi: CampaignsApi,
    /**
     * The ChannelsApi service constructor.
     * @property {module:api/ChannelsApi}
     */
    ChannelsApi: ChannelsApi,
    /**
     * The ContactsApi service constructor.
     * @property {module:api/ContactsApi}
     */
    ContactsApi: ContactsApi,
    /**
     * The DomainsApi service constructor.
     * @property {module:api/DomainsApi}
     */
    DomainsApi: DomainsApi,
    /**
     * The EmailsApi service constructor.
     * @property {module:api/EmailsApi}
     */
    EmailsApi: EmailsApi,
    /**
     * The FilesApi service constructor.
     * @property {module:api/FilesApi}
     */
    FilesApi: FilesApi,
    /**
     * The ListsApi service constructor.
     * @property {module:api/ListsApi}
     */
    ListsApi: ListsApi,
    /**
     * The PoolsApi service constructor.
     * @property {module:api/PoolsApi}
     */
    PoolsApi: PoolsApi,
    /**
     * The ReportsApi service constructor.
     * @property {module:api/ReportsApi}
     */
    ReportsApi: ReportsApi,
    /**
     * The SMSApi service constructor.
     * @property {module:api/SMSApi}
     */
    SMSApi: SMSApi,
    /**
     * The SecurityApi service constructor.
     * @property {module:api/SecurityApi}
     */
    SecurityApi: SecurityApi,
    /**
     * The SegmentsApi service constructor.
     * @property {module:api/SegmentsApi}
     */
    SegmentsApi: SegmentsApi,
    /**
     * The SubaccountsApi service constructor.
     * @property {module:api/SubaccountsApi}
     */
    SubaccountsApi: SubaccountsApi,
    /**
     * The TasksApi service constructor.
     * @property {module:api/TasksApi}
     */
    TasksApi: TasksApi,
    /**
     * The TemplatesApi service constructor.
     * @property {module:api/TemplatesApi}
     */
    TemplatesApi: TemplatesApi,
    /**
     * The WebhooksApi service constructor.
     * @property {module:api/WebhooksApi}
     */
    WebhooksApi: WebhooksApi
  };

  return exports;
}));

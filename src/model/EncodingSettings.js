/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.EncodingSettings = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The EncodingSettings model module.
   * @module model/EncodingSettings
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>EncodingSettings</code>.
   * @alias module:model/EncodingSettings
   * @class
   * @param charset {String} 
   * @param encoding {module:model/EncodingSettings.EncodingEnum} 0 for None, 1 for Raw7Bit, 2 for Raw8Bit, 3 for QuotedPrintable, 4 for Base64 (Default), 5 for Uue note that you can also provide the text version such as \"Raw7Bit\" for value 1. NOTE: Base64 or QuotedPrintable is recommended if you are validating your domain(s) with DKIM.
   */
  var exports = function(charset, encoding) {
    var _this = this;

    _this['Charset'] = charset;
    _this['Encoding'] = encoding;
  };

  /**
   * Constructs a <code>EncodingSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EncodingSettings} obj Optional instance to populate.
   * @return {module:model/EncodingSettings} The populated <code>EncodingSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Charset')) {
        obj['Charset'] = ApiClient.convertToType(data['Charset'], 'String');
      }
      if (data.hasOwnProperty('Encoding')) {
        obj['Encoding'] = ApiClient.convertToType(data['Encoding'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} Charset
   */
  exports.prototype['Charset'] = undefined;
  /**
   * 0 for None, 1 for Raw7Bit, 2 for Raw8Bit, 3 for QuotedPrintable, 4 for Base64 (Default), 5 for Uue note that you can also provide the text version such as \"Raw7Bit\" for value 1. NOTE: Base64 or QuotedPrintable is recommended if you are validating your domain(s) with DKIM.
   * @member {module:model/EncodingSettings.EncodingEnum} Encoding
   */
  exports.prototype['Encoding'] = undefined;


  /**
   * Allowed values for the <code>Encoding</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EncodingEnum = {
    /**
     * value: "UserProvided"
     * @const
     */
    "UserProvided": "UserProvided",
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Raw7bit"
     * @const
     */
    "Raw7bit": "Raw7bit",
    /**
     * value: "Raw8bit"
     * @const
     */
    "Raw8bit": "Raw8bit",
    /**
     * value: "QuotedPrintable"
     * @const
     */
    "QuotedPrintable": "QuotedPrintable",
    /**
     * value: "Base64"
     * @const
     */
    "Base64": "Base64",
    /**
     * value: "Uue"
     * @const
     */
    "Uue": "Uue"  };


  return exports;
}));



/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.BouncedCategorySummary = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BouncedCategorySummary model module.
   * @module model/BouncedCategorySummary
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>BouncedCategorySummary</code>.
   * Summary of bounced categories, based on specified date range.
   * @alias module:model/BouncedCategorySummary
   * @class
   * @param spam {Number} Number of messages marked as SPAM
   * @param blackListed {Number} Number of blacklisted messages
   * @param noMailbox {Number} Number of messages flagged with 'No Mailbox'
   * @param greyListed {Number} Number of messages flagged with 'Grey Listed'
   * @param throttled {Number} Number of messages flagged with 'Throttled'
   * @param timeout {Number} Number of messages flagged with 'Timeout'
   * @param connectionProblem {Number} Number of messages flagged with 'Connection Problem'
   * @param spfProblem {Number} Number of messages flagged with 'SPF Problem'
   * @param accountProblem {Number} Number of messages flagged with 'Account Problem'
   * @param dnsProblem {Number} Number of messages flagged with 'DNS Problem'
   * @param whitelistingProblem {Number} Number of messages flagged with 'WhiteListing Problem'
   * @param codeError {Number} Number of messages flagged with 'Code Error'
   * @param notDelivered {Number} Number of messages flagged with 'Not Delivered'
   * @param manualCancel {Number} Number of manually cancelled messages
   * @param connectionTerminated {Number} Number of messages flagged with 'Connection terminated'
   */
  var exports = function(spam, blackListed, noMailbox, greyListed, throttled, timeout, connectionProblem, spfProblem, accountProblem, dnsProblem, whitelistingProblem, codeError, notDelivered, manualCancel, connectionTerminated) {
    var _this = this;

    _this['Spam'] = spam;
    _this['BlackListed'] = blackListed;
    _this['NoMailbox'] = noMailbox;
    _this['GreyListed'] = greyListed;
    _this['Throttled'] = throttled;
    _this['Timeout'] = timeout;
    _this['ConnectionProblem'] = connectionProblem;
    _this['SpfProblem'] = spfProblem;
    _this['AccountProblem'] = accountProblem;
    _this['DnsProblem'] = dnsProblem;
    _this['WhitelistingProblem'] = whitelistingProblem;
    _this['CodeError'] = codeError;
    _this['NotDelivered'] = notDelivered;
    _this['ManualCancel'] = manualCancel;
    _this['ConnectionTerminated'] = connectionTerminated;
  };

  /**
   * Constructs a <code>BouncedCategorySummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BouncedCategorySummary} obj Optional instance to populate.
   * @return {module:model/BouncedCategorySummary} The populated <code>BouncedCategorySummary</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Spam')) {
        obj['Spam'] = ApiClient.convertToType(data['Spam'], 'Number');
      }
      if (data.hasOwnProperty('BlackListed')) {
        obj['BlackListed'] = ApiClient.convertToType(data['BlackListed'], 'Number');
      }
      if (data.hasOwnProperty('NoMailbox')) {
        obj['NoMailbox'] = ApiClient.convertToType(data['NoMailbox'], 'Number');
      }
      if (data.hasOwnProperty('GreyListed')) {
        obj['GreyListed'] = ApiClient.convertToType(data['GreyListed'], 'Number');
      }
      if (data.hasOwnProperty('Throttled')) {
        obj['Throttled'] = ApiClient.convertToType(data['Throttled'], 'Number');
      }
      if (data.hasOwnProperty('Timeout')) {
        obj['Timeout'] = ApiClient.convertToType(data['Timeout'], 'Number');
      }
      if (data.hasOwnProperty('ConnectionProblem')) {
        obj['ConnectionProblem'] = ApiClient.convertToType(data['ConnectionProblem'], 'Number');
      }
      if (data.hasOwnProperty('SpfProblem')) {
        obj['SpfProblem'] = ApiClient.convertToType(data['SpfProblem'], 'Number');
      }
      if (data.hasOwnProperty('AccountProblem')) {
        obj['AccountProblem'] = ApiClient.convertToType(data['AccountProblem'], 'Number');
      }
      if (data.hasOwnProperty('DnsProblem')) {
        obj['DnsProblem'] = ApiClient.convertToType(data['DnsProblem'], 'Number');
      }
      if (data.hasOwnProperty('WhitelistingProblem')) {
        obj['WhitelistingProblem'] = ApiClient.convertToType(data['WhitelistingProblem'], 'Number');
      }
      if (data.hasOwnProperty('CodeError')) {
        obj['CodeError'] = ApiClient.convertToType(data['CodeError'], 'Number');
      }
      if (data.hasOwnProperty('NotDelivered')) {
        obj['NotDelivered'] = ApiClient.convertToType(data['NotDelivered'], 'Number');
      }
      if (data.hasOwnProperty('ManualCancel')) {
        obj['ManualCancel'] = ApiClient.convertToType(data['ManualCancel'], 'Number');
      }
      if (data.hasOwnProperty('ConnectionTerminated')) {
        obj['ConnectionTerminated'] = ApiClient.convertToType(data['ConnectionTerminated'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Number of messages marked as SPAM
   * @member {Number} Spam
   */
  exports.prototype['Spam'] = undefined;
  /**
   * Number of blacklisted messages
   * @member {Number} BlackListed
   */
  exports.prototype['BlackListed'] = undefined;
  /**
   * Number of messages flagged with 'No Mailbox'
   * @member {Number} NoMailbox
   */
  exports.prototype['NoMailbox'] = undefined;
  /**
   * Number of messages flagged with 'Grey Listed'
   * @member {Number} GreyListed
   */
  exports.prototype['GreyListed'] = undefined;
  /**
   * Number of messages flagged with 'Throttled'
   * @member {Number} Throttled
   */
  exports.prototype['Throttled'] = undefined;
  /**
   * Number of messages flagged with 'Timeout'
   * @member {Number} Timeout
   */
  exports.prototype['Timeout'] = undefined;
  /**
   * Number of messages flagged with 'Connection Problem'
   * @member {Number} ConnectionProblem
   */
  exports.prototype['ConnectionProblem'] = undefined;
  /**
   * Number of messages flagged with 'SPF Problem'
   * @member {Number} SpfProblem
   */
  exports.prototype['SpfProblem'] = undefined;
  /**
   * Number of messages flagged with 'Account Problem'
   * @member {Number} AccountProblem
   */
  exports.prototype['AccountProblem'] = undefined;
  /**
   * Number of messages flagged with 'DNS Problem'
   * @member {Number} DnsProblem
   */
  exports.prototype['DnsProblem'] = undefined;
  /**
   * Number of messages flagged with 'WhiteListing Problem'
   * @member {Number} WhitelistingProblem
   */
  exports.prototype['WhitelistingProblem'] = undefined;
  /**
   * Number of messages flagged with 'Code Error'
   * @member {Number} CodeError
   */
  exports.prototype['CodeError'] = undefined;
  /**
   * Number of messages flagged with 'Not Delivered'
   * @member {Number} NotDelivered
   */
  exports.prototype['NotDelivered'] = undefined;
  /**
   * Number of manually cancelled messages
   * @member {Number} ManualCancel
   */
  exports.prototype['ManualCancel'] = undefined;
  /**
   * Number of messages flagged with 'Connection terminated'
   * @member {Number} ConnectionTerminated
   */
  exports.prototype['ConnectionTerminated'] = undefined;



  return exports;
}));



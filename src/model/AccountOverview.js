/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.AccountOverview = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AccountOverview model module.
   * @module model/AccountOverview
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>AccountOverview</code>.
   * Basic overview of your account
   * @alias module:model/AccountOverview
   * @class
   * @param totalEmailsSent {Number} Amount of emails sent from this account
   * @param credit {Number} Amount of emails sent from this account
   * @param costPerThousand {Number} Cost of 1000 emails
   * @param inProgressCount {Number} Number of messages in progress
   * @param blockedContactsCount {Number} Number of contacts currently with blocked status of Unsubscribed, Complaint, Bounced or InActive
   * @param reputation {Number} Numeric reputation
   * @param contactCount {Number} Number of contacts
   * @param campaignCount {Number} Number of created campaigns
   * @param templateCount {Number} Number of available templates
   * @param subAccountCount {Number} Number of created subaccounts
   * @param referralCount {Number} Number of active referrals
   */
  var exports = function(totalEmailsSent, credit, costPerThousand, inProgressCount, blockedContactsCount, reputation, contactCount, campaignCount, templateCount, subAccountCount, referralCount) {
    var _this = this;

    _this['TotalEmailsSent'] = totalEmailsSent;
    _this['Credit'] = credit;
    _this['CostPerThousand'] = costPerThousand;
    _this['InProgressCount'] = inProgressCount;
    _this['BlockedContactsCount'] = blockedContactsCount;
    _this['Reputation'] = reputation;
    _this['ContactCount'] = contactCount;
    _this['CampaignCount'] = campaignCount;
    _this['TemplateCount'] = templateCount;
    _this['SubAccountCount'] = subAccountCount;
    _this['ReferralCount'] = referralCount;
  };

  /**
   * Constructs a <code>AccountOverview</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountOverview} obj Optional instance to populate.
   * @return {module:model/AccountOverview} The populated <code>AccountOverview</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('TotalEmailsSent')) {
        obj['TotalEmailsSent'] = ApiClient.convertToType(data['TotalEmailsSent'], 'Number');
      }
      if (data.hasOwnProperty('Credit')) {
        obj['Credit'] = ApiClient.convertToType(data['Credit'], 'Number');
      }
      if (data.hasOwnProperty('CostPerThousand')) {
        obj['CostPerThousand'] = ApiClient.convertToType(data['CostPerThousand'], 'Number');
      }
      if (data.hasOwnProperty('InProgressCount')) {
        obj['InProgressCount'] = ApiClient.convertToType(data['InProgressCount'], 'Number');
      }
      if (data.hasOwnProperty('BlockedContactsCount')) {
        obj['BlockedContactsCount'] = ApiClient.convertToType(data['BlockedContactsCount'], 'Number');
      }
      if (data.hasOwnProperty('Reputation')) {
        obj['Reputation'] = ApiClient.convertToType(data['Reputation'], 'Number');
      }
      if (data.hasOwnProperty('ContactCount')) {
        obj['ContactCount'] = ApiClient.convertToType(data['ContactCount'], 'Number');
      }
      if (data.hasOwnProperty('CampaignCount')) {
        obj['CampaignCount'] = ApiClient.convertToType(data['CampaignCount'], 'Number');
      }
      if (data.hasOwnProperty('TemplateCount')) {
        obj['TemplateCount'] = ApiClient.convertToType(data['TemplateCount'], 'Number');
      }
      if (data.hasOwnProperty('SubAccountCount')) {
        obj['SubAccountCount'] = ApiClient.convertToType(data['SubAccountCount'], 'Number');
      }
      if (data.hasOwnProperty('ReferralCount')) {
        obj['ReferralCount'] = ApiClient.convertToType(data['ReferralCount'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Amount of emails sent from this account
   * @member {Number} TotalEmailsSent
   */
  exports.prototype['TotalEmailsSent'] = undefined;
  /**
   * Amount of emails sent from this account
   * @member {Number} Credit
   */
  exports.prototype['Credit'] = undefined;
  /**
   * Cost of 1000 emails
   * @member {Number} CostPerThousand
   */
  exports.prototype['CostPerThousand'] = undefined;
  /**
   * Number of messages in progress
   * @member {Number} InProgressCount
   */
  exports.prototype['InProgressCount'] = undefined;
  /**
   * Number of contacts currently with blocked status of Unsubscribed, Complaint, Bounced or InActive
   * @member {Number} BlockedContactsCount
   */
  exports.prototype['BlockedContactsCount'] = undefined;
  /**
   * Numeric reputation
   * @member {Number} Reputation
   */
  exports.prototype['Reputation'] = undefined;
  /**
   * Number of contacts
   * @member {Number} ContactCount
   */
  exports.prototype['ContactCount'] = undefined;
  /**
   * Number of created campaigns
   * @member {Number} CampaignCount
   */
  exports.prototype['CampaignCount'] = undefined;
  /**
   * Number of available templates
   * @member {Number} TemplateCount
   */
  exports.prototype['TemplateCount'] = undefined;
  /**
   * Number of created subaccounts
   * @member {Number} SubAccountCount
   */
  exports.prototype['SubAccountCount'] = undefined;
  /**
   * Number of active referrals
   * @member {Number} ReferralCount
   */
  exports.prototype['ReferralCount'] = undefined;



  return exports;
}));



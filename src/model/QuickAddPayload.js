/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ContactPayload'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ContactPayload'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.QuickAddPayload = factory(root.ElasticemailRestfulApi.ApiClient, root.ElasticemailRestfulApi.ContactPayload);
  }
}(this, function(ApiClient, ContactPayload) {
  'use strict';




  /**
   * The QuickAddPayload model module.
   * @module model/QuickAddPayload
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>QuickAddPayload</code>.
   * 
   * @alias module:model/QuickAddPayload
   * @class
   * @param contacts {Array.<module:model/ContactPayload>} 
   * @param listName {String} Name of your list.
   * @param status {module:model/QuickAddPayload.StatusEnum} Name of status: Active, Engaged, Inactive, Abuse, Bounced, Unsubscribed.
   * @param notifyEmail {String} Emails, separated by semicolon, to which the notification about contact subscribing should be sent to
   * @param consentIP {String} IP address of consent to send this contact(s) your email. If not provided your current public IP address is used for consent.
   * @param consentTracking {module:model/QuickAddPayload.ConsentTrackingEnum} 
   */
  var exports = function(contacts, listName, status, notifyEmail, consentIP, consentTracking) {
    var _this = this;

    _this['Contacts'] = contacts;
    _this['ListName'] = listName;
    _this['Status'] = status;
    _this['NotifyEmail'] = notifyEmail;

    _this['ConsentIP'] = consentIP;
    _this['ConsentTracking'] = consentTracking;
  };

  /**
   * Constructs a <code>QuickAddPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/QuickAddPayload} obj Optional instance to populate.
   * @return {module:model/QuickAddPayload} The populated <code>QuickAddPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Contacts')) {
        obj['Contacts'] = ApiClient.convertToType(data['Contacts'], [ContactPayload]);
      }
      if (data.hasOwnProperty('ListName')) {
        obj['ListName'] = ApiClient.convertToType(data['ListName'], 'String');
      }
      if (data.hasOwnProperty('Status')) {
        obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
      }
      if (data.hasOwnProperty('NotifyEmail')) {
        obj['NotifyEmail'] = ApiClient.convertToType(data['NotifyEmail'], 'String');
      }
      if (data.hasOwnProperty('ConsentDate')) {
        obj['ConsentDate'] = ApiClient.convertToType(data['ConsentDate'], 'Date');
      }
      if (data.hasOwnProperty('ConsentIP')) {
        obj['ConsentIP'] = ApiClient.convertToType(data['ConsentIP'], 'String');
      }
      if (data.hasOwnProperty('ConsentTracking')) {
        obj['ConsentTracking'] = ApiClient.convertToType(data['ConsentTracking'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/ContactPayload>} Contacts
   */
  exports.prototype['Contacts'] = undefined;
  /**
   * Name of your list.
   * @member {String} ListName
   */
  exports.prototype['ListName'] = undefined;
  /**
   * Name of status: Active, Engaged, Inactive, Abuse, Bounced, Unsubscribed.
   * @member {module:model/QuickAddPayload.StatusEnum} Status
   */
  exports.prototype['Status'] = undefined;
  /**
   * Emails, separated by semicolon, to which the notification about contact subscribing should be sent to
   * @member {String} NotifyEmail
   */
  exports.prototype['NotifyEmail'] = undefined;
  /**
   * Date of consent to send this contact(s) your email. If not provided current date is used for consent.
   * @member {Date} ConsentDate
   */
  exports.prototype['ConsentDate'] = undefined;
  /**
   * IP address of consent to send this contact(s) your email. If not provided your current public IP address is used for consent.
   * @member {String} ConsentIP
   */
  exports.prototype['ConsentIP'] = undefined;
  /**
   * @member {module:model/QuickAddPayload.ConsentTrackingEnum} ConsentTracking
   */
  exports.prototype['ConsentTracking'] = undefined;


  /**
   * Allowed values for the <code>Status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Transactional"
     * @const
     */
    "Transactional": "Transactional",
    /**
     * value: "Engaged"
     * @const
     */
    "Engaged": "Engaged",
    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",
    /**
     * value: "Bounced"
     * @const
     */
    "Bounced": "Bounced",
    /**
     * value: "Unsubscribed"
     * @const
     */
    "Unsubscribed": "Unsubscribed",
    /**
     * value: "Abuse"
     * @const
     */
    "Abuse": "Abuse",
    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive",
    /**
     * value: "Stale"
     * @const
     */
    "Stale": "Stale",
    /**
     * value: "NotConfirmed"
     * @const
     */
    "NotConfirmed": "NotConfirmed"  };

  /**
   * Allowed values for the <code>ConsentTracking</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ConsentTrackingEnum = {
    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",
    /**
     * value: "Allow"
     * @const
     */
    "Allow": "Allow",
    /**
     * value: "Deny"
     * @const
     */
    "Deny": "Deny"  };


  return exports;
}));



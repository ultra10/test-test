/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SpamRule'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SpamRule'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.SpamCheck = factory(root.ElasticemailRestfulApi.ApiClient, root.ElasticemailRestfulApi.SpamRule);
  }
}(this, function(ApiClient, SpamRule) {
  'use strict';




  /**
   * The SpamCheck model module.
   * @module model/SpamCheck
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>SpamCheck</code>.
   * Spam check of specified message.
   * @alias module:model/SpamCheck
   * @class
   * @param totalScore {String} Total spam score from
   * @param _date {String} Date in YYYY-MM-DDThh:ii:ss format
   * @param subject {String} Default subject of email.
   * @param fromEmail {String} Default From: email address.
   * @param msgID {String} ID number of selected message.
   * @param channelName {String} Name of selected channel.
   * @param rules {Array.<module:model/SpamRule>} 
   */
  var exports = function(totalScore, _date, subject, fromEmail, msgID, channelName, rules) {
    var _this = this;

    _this['TotalScore'] = totalScore;
    _this['Date'] = _date;
    _this['Subject'] = subject;
    _this['FromEmail'] = fromEmail;
    _this['MsgID'] = msgID;
    _this['ChannelName'] = channelName;
    _this['Rules'] = rules;
  };

  /**
   * Constructs a <code>SpamCheck</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SpamCheck} obj Optional instance to populate.
   * @return {module:model/SpamCheck} The populated <code>SpamCheck</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('TotalScore')) {
        obj['TotalScore'] = ApiClient.convertToType(data['TotalScore'], 'String');
      }
      if (data.hasOwnProperty('Date')) {
        obj['Date'] = ApiClient.convertToType(data['Date'], 'String');
      }
      if (data.hasOwnProperty('Subject')) {
        obj['Subject'] = ApiClient.convertToType(data['Subject'], 'String');
      }
      if (data.hasOwnProperty('FromEmail')) {
        obj['FromEmail'] = ApiClient.convertToType(data['FromEmail'], 'String');
      }
      if (data.hasOwnProperty('MsgID')) {
        obj['MsgID'] = ApiClient.convertToType(data['MsgID'], 'String');
      }
      if (data.hasOwnProperty('ChannelName')) {
        obj['ChannelName'] = ApiClient.convertToType(data['ChannelName'], 'String');
      }
      if (data.hasOwnProperty('Rules')) {
        obj['Rules'] = ApiClient.convertToType(data['Rules'], [SpamRule]);
      }
    }
    return obj;
  }

  /**
   * Total spam score from
   * @member {String} TotalScore
   */
  exports.prototype['TotalScore'] = undefined;
  /**
   * Date in YYYY-MM-DDThh:ii:ss format
   * @member {String} Date
   */
  exports.prototype['Date'] = undefined;
  /**
   * Default subject of email.
   * @member {String} Subject
   */
  exports.prototype['Subject'] = undefined;
  /**
   * Default From: email address.
   * @member {String} FromEmail
   */
  exports.prototype['FromEmail'] = undefined;
  /**
   * ID number of selected message.
   * @member {String} MsgID
   */
  exports.prototype['MsgID'] = undefined;
  /**
   * Name of selected channel.
   * @member {String} ChannelName
   */
  exports.prototype['ChannelName'] = undefined;
  /**
   * @member {Array.<module:model/SpamRule>} Rules
   */
  exports.prototype['Rules'] = undefined;



  return exports;
}));



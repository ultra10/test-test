/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.ContactPayload = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ContactPayload model module.
   * @module model/ContactPayload
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>ContactPayload</code>.
   * 
   * @alias module:model/ContactPayload
   * @class
   * @param email {String} Proper email address.
   * @param firstName {String} First name.
   * @param lastName {String} Last name.
   * @param notes {String} Free form field of notes
   * @param field {Object.<String, String>} 
   */
  var exports = function(email, firstName, lastName, notes, field) {
    var _this = this;

    _this['Email'] = email;
    _this['FirstName'] = firstName;
    _this['LastName'] = lastName;
    _this['Notes'] = notes;
    _this['Field'] = field;
  };

  /**
   * Constructs a <code>ContactPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContactPayload} obj Optional instance to populate.
   * @return {module:model/ContactPayload} The populated <code>ContactPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Email')) {
        obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
      }
      if (data.hasOwnProperty('FirstName')) {
        obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
      }
      if (data.hasOwnProperty('LastName')) {
        obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
      }
      if (data.hasOwnProperty('Notes')) {
        obj['Notes'] = ApiClient.convertToType(data['Notes'], 'String');
      }
      if (data.hasOwnProperty('Field')) {
        obj['Field'] = ApiClient.convertToType(data['Field'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * Proper email address.
   * @member {String} Email
   */
  exports.prototype['Email'] = undefined;
  /**
   * First name.
   * @member {String} FirstName
   */
  exports.prototype['FirstName'] = undefined;
  /**
   * Last name.
   * @member {String} LastName
   */
  exports.prototype['LastName'] = undefined;
  /**
   * Free form field of notes
   * @member {String} Notes
   */
  exports.prototype['Notes'] = undefined;
  /**
   * @member {Object.<String, String>} Field
   */
  exports.prototype['Field'] = undefined;



  return exports;
}));



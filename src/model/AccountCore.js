/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.AccountCore = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AccountCore model module.
   * @module model/AccountCore
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>AccountCore</code>.
   * Detailed information about your account
   * @alias module:model/AccountCore
   * @class
   * @param publicAccountID {String} Public key for limited access to your account such as contact/add so you can use it safely on public websites.
   * @param apiKey {String} ApiKey that gives you access to our SMTP and HTTP API's.
   * @param isSub {Boolean} True, if account is a subaccount. Otherwise, false
   * @param isUser {Boolean} 
   * @param statusNumber {Number} Number of status: 1 - Active
   * @param statusFormatted {String} Account status: Active
   * @param paymentFormUrl {String} URL form for payments.
   * @param enablePrivateBranding {Boolean} True: Turn on or off ability to send mails under your brand. Otherwise, false
   * @param supportLink {String} Address to your support.
   * @param privateBrandingUrl {String} Subdomain for your rebranded service
   * @param affiliateLink {String} URL for affiliating.
   * @param emailCredits {Number} Amount of email credits
   * @param pricePerEmail {Number} Amount of emails sent from this account
   * @param accountPaymentUrl {String} URL for making payments.
   * @param smtp {String} Address of SMTP server.
   * @param smtpAlternative {String} Address of alternative SMTP server.
   * @param autoCreditStatus {String} Status of automatic payments configuration.
   * @param autoCreditLevel {Number} When AutoCreditStatus is Enabled, the credit level that triggers the credit to be recharged.
   * @param autoCreditAmount {Number} When AutoCreditStatus is Enabled, the amount of credit to be recharged.
   * @param dailySendLimit {Number} Amount of emails account can send daily
   * @param dateCreated {Date} Creation date.
   * @param linkTracking {Boolean} True, if you have enabled link tracking. Otherwise, false
   * @param contentTransferEncoding {String} Type of content encoding
   * @param needsSMSVerification {Boolean} 
   */
  var exports = function(publicAccountID, apiKey, isSub, isUser, statusNumber, statusFormatted, paymentFormUrl, enablePrivateBranding, supportLink, privateBrandingUrl, affiliateLink, emailCredits, pricePerEmail, accountPaymentUrl, smtp, smtpAlternative, autoCreditStatus, autoCreditLevel, autoCreditAmount, dailySendLimit, dateCreated, linkTracking, contentTransferEncoding, needsSMSVerification) {
    var _this = this;

    _this['PublicAccountID'] = publicAccountID;
    _this['ApiKey'] = apiKey;
    _this['IsSub'] = isSub;
    _this['IsUser'] = isUser;
    _this['StatusNumber'] = statusNumber;
    _this['StatusFormatted'] = statusFormatted;
    _this['PaymentFormUrl'] = paymentFormUrl;
    _this['EnablePrivateBranding'] = enablePrivateBranding;
    _this['SupportLink'] = supportLink;
    _this['PrivateBrandingUrl'] = privateBrandingUrl;
    _this['AffiliateLink'] = affiliateLink;

    _this['EmailCredits'] = emailCredits;
    _this['PricePerEmail'] = pricePerEmail;
    _this['AccountPaymentUrl'] = accountPaymentUrl;
    _this['Smtp'] = smtp;
    _this['SmtpAlternative'] = smtpAlternative;
    _this['AutoCreditStatus'] = autoCreditStatus;
    _this['AutoCreditLevel'] = autoCreditLevel;
    _this['AutoCreditAmount'] = autoCreditAmount;
    _this['DailySendLimit'] = dailySendLimit;
    _this['DateCreated'] = dateCreated;
    _this['LinkTracking'] = linkTracking;
    _this['ContentTransferEncoding'] = contentTransferEncoding;
    _this['NeedsSMSVerification'] = needsSMSVerification;
  };

  /**
   * Constructs a <code>AccountCore</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountCore} obj Optional instance to populate.
   * @return {module:model/AccountCore} The populated <code>AccountCore</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('PublicAccountID')) {
        obj['PublicAccountID'] = ApiClient.convertToType(data['PublicAccountID'], 'String');
      }
      if (data.hasOwnProperty('ApiKey')) {
        obj['ApiKey'] = ApiClient.convertToType(data['ApiKey'], 'String');
      }
      if (data.hasOwnProperty('IsSub')) {
        obj['IsSub'] = ApiClient.convertToType(data['IsSub'], 'Boolean');
      }
      if (data.hasOwnProperty('IsUser')) {
        obj['IsUser'] = ApiClient.convertToType(data['IsUser'], 'Boolean');
      }
      if (data.hasOwnProperty('StatusNumber')) {
        obj['StatusNumber'] = ApiClient.convertToType(data['StatusNumber'], 'Number');
      }
      if (data.hasOwnProperty('StatusFormatted')) {
        obj['StatusFormatted'] = ApiClient.convertToType(data['StatusFormatted'], 'String');
      }
      if (data.hasOwnProperty('PaymentFormUrl')) {
        obj['PaymentFormUrl'] = ApiClient.convertToType(data['PaymentFormUrl'], 'String');
      }
      if (data.hasOwnProperty('EnablePrivateBranding')) {
        obj['EnablePrivateBranding'] = ApiClient.convertToType(data['EnablePrivateBranding'], 'Boolean');
      }
      if (data.hasOwnProperty('SupportLink')) {
        obj['SupportLink'] = ApiClient.convertToType(data['SupportLink'], 'String');
      }
      if (data.hasOwnProperty('PrivateBrandingUrl')) {
        obj['PrivateBrandingUrl'] = ApiClient.convertToType(data['PrivateBrandingUrl'], 'String');
      }
      if (data.hasOwnProperty('AffiliateLink')) {
        obj['AffiliateLink'] = ApiClient.convertToType(data['AffiliateLink'], 'String');
      }
      if (data.hasOwnProperty('MonthlyEmailsSent')) {
        obj['MonthlyEmailsSent'] = ApiClient.convertToType(data['MonthlyEmailsSent'], 'Number');
      }
      if (data.hasOwnProperty('EmailCredits')) {
        obj['EmailCredits'] = ApiClient.convertToType(data['EmailCredits'], 'Number');
      }
      if (data.hasOwnProperty('PricePerEmail')) {
        obj['PricePerEmail'] = ApiClient.convertToType(data['PricePerEmail'], 'Number');
      }
      if (data.hasOwnProperty('AccountPaymentUrl')) {
        obj['AccountPaymentUrl'] = ApiClient.convertToType(data['AccountPaymentUrl'], 'String');
      }
      if (data.hasOwnProperty('Smtp')) {
        obj['Smtp'] = ApiClient.convertToType(data['Smtp'], 'String');
      }
      if (data.hasOwnProperty('SmtpAlternative')) {
        obj['SmtpAlternative'] = ApiClient.convertToType(data['SmtpAlternative'], 'String');
      }
      if (data.hasOwnProperty('AutoCreditStatus')) {
        obj['AutoCreditStatus'] = ApiClient.convertToType(data['AutoCreditStatus'], 'String');
      }
      if (data.hasOwnProperty('AutoCreditLevel')) {
        obj['AutoCreditLevel'] = ApiClient.convertToType(data['AutoCreditLevel'], 'Number');
      }
      if (data.hasOwnProperty('AutoCreditAmount')) {
        obj['AutoCreditAmount'] = ApiClient.convertToType(data['AutoCreditAmount'], 'Number');
      }
      if (data.hasOwnProperty('DailySendLimit')) {
        obj['DailySendLimit'] = ApiClient.convertToType(data['DailySendLimit'], 'Number');
      }
      if (data.hasOwnProperty('DateCreated')) {
        obj['DateCreated'] = ApiClient.convertToType(data['DateCreated'], 'Date');
      }
      if (data.hasOwnProperty('LinkTracking')) {
        obj['LinkTracking'] = ApiClient.convertToType(data['LinkTracking'], 'Boolean');
      }
      if (data.hasOwnProperty('ContentTransferEncoding')) {
        obj['ContentTransferEncoding'] = ApiClient.convertToType(data['ContentTransferEncoding'], 'String');
      }
      if (data.hasOwnProperty('NeedsSMSVerification')) {
        obj['NeedsSMSVerification'] = ApiClient.convertToType(data['NeedsSMSVerification'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Public key for limited access to your account such as contact/add so you can use it safely on public websites.
   * @member {String} PublicAccountID
   */
  exports.prototype['PublicAccountID'] = undefined;
  /**
   * ApiKey that gives you access to our SMTP and HTTP API's.
   * @member {String} ApiKey
   */
  exports.prototype['ApiKey'] = undefined;
  /**
   * True, if account is a subaccount. Otherwise, false
   * @member {Boolean} IsSub
   */
  exports.prototype['IsSub'] = undefined;
  /**
   * @member {Boolean} IsUser
   */
  exports.prototype['IsUser'] = undefined;
  /**
   * Number of status: 1 - Active
   * @member {Number} StatusNumber
   */
  exports.prototype['StatusNumber'] = undefined;
  /**
   * Account status: Active
   * @member {String} StatusFormatted
   */
  exports.prototype['StatusFormatted'] = undefined;
  /**
   * URL form for payments.
   * @member {String} PaymentFormUrl
   */
  exports.prototype['PaymentFormUrl'] = undefined;
  /**
   * True: Turn on or off ability to send mails under your brand. Otherwise, false
   * @member {Boolean} EnablePrivateBranding
   */
  exports.prototype['EnablePrivateBranding'] = undefined;
  /**
   * Address to your support.
   * @member {String} SupportLink
   */
  exports.prototype['SupportLink'] = undefined;
  /**
   * Subdomain for your rebranded service
   * @member {String} PrivateBrandingUrl
   */
  exports.prototype['PrivateBrandingUrl'] = undefined;
  /**
   * URL for affiliating.
   * @member {String} AffiliateLink
   */
  exports.prototype['AffiliateLink'] = undefined;
  /**
   * Amount of emails sent from this account
   * @member {Number} MonthlyEmailsSent
   */
  exports.prototype['MonthlyEmailsSent'] = undefined;
  /**
   * Amount of email credits
   * @member {Number} EmailCredits
   */
  exports.prototype['EmailCredits'] = undefined;
  /**
   * Amount of emails sent from this account
   * @member {Number} PricePerEmail
   */
  exports.prototype['PricePerEmail'] = undefined;
  /**
   * URL for making payments.
   * @member {String} AccountPaymentUrl
   */
  exports.prototype['AccountPaymentUrl'] = undefined;
  /**
   * Address of SMTP server.
   * @member {String} Smtp
   */
  exports.prototype['Smtp'] = undefined;
  /**
   * Address of alternative SMTP server.
   * @member {String} SmtpAlternative
   */
  exports.prototype['SmtpAlternative'] = undefined;
  /**
   * Status of automatic payments configuration.
   * @member {String} AutoCreditStatus
   */
  exports.prototype['AutoCreditStatus'] = undefined;
  /**
   * When AutoCreditStatus is Enabled, the credit level that triggers the credit to be recharged.
   * @member {Number} AutoCreditLevel
   */
  exports.prototype['AutoCreditLevel'] = undefined;
  /**
   * When AutoCreditStatus is Enabled, the amount of credit to be recharged.
   * @member {Number} AutoCreditAmount
   */
  exports.prototype['AutoCreditAmount'] = undefined;
  /**
   * Amount of emails account can send daily
   * @member {Number} DailySendLimit
   */
  exports.prototype['DailySendLimit'] = undefined;
  /**
   * Creation date.
   * @member {Date} DateCreated
   */
  exports.prototype['DateCreated'] = undefined;
  /**
   * True, if you have enabled link tracking. Otherwise, false
   * @member {Boolean} LinkTracking
   */
  exports.prototype['LinkTracking'] = undefined;
  /**
   * Type of content encoding
   * @member {String} ContentTransferEncoding
   */
  exports.prototype['ContentTransferEncoding'] = undefined;
  /**
   * @member {Boolean} NeedsSMSVerification
   */
  exports.prototype['NeedsSMSVerification'] = undefined;



  return exports;
}));



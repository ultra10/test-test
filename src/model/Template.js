/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Body'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Body'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.Template = factory(root.ElasticemailRestfulApi.ApiClient, root.ElasticemailRestfulApi.Body);
  }
}(this, function(ApiClient, Body) {
  'use strict';




  /**
   * The Template model module.
   * @module model/Template
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>Template</code>.
   * 
   * @alias module:model/Template
   * @class
   * @param templateType {module:model/Template.TemplateTypeEnum} 0 for API connections
   * @param name {String} Filename
   * @param dateAdded {Date} Date of creation in YYYY-MM-DDThh:ii:ss format
   * @param fromEmail {String} Default From: email address.
   * @param fromName {String} Default From: name.
   * @param body {module:model/Body} 
   * @param originalTemplateName {String} 
   * @param templateScope {module:model/Template.TemplateScopeEnum} Enum: 0 - private, 1 - public, 2 - mockup
   */
  var exports = function(templateType, name, dateAdded, fromEmail, fromName, body, originalTemplateName, templateScope) {
    var _this = this;

    _this['TemplateType'] = templateType;
    _this['Name'] = name;
    _this['DateAdded'] = dateAdded;
    _this['FromEmail'] = fromEmail;
    _this['FromName'] = fromName;
    _this['Body'] = body;
    _this['OriginalTemplateName'] = originalTemplateName;
    _this['TemplateScope'] = templateScope;
  };

  /**
   * Constructs a <code>Template</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Template} obj Optional instance to populate.
   * @return {module:model/Template} The populated <code>Template</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('TemplateType')) {
        obj['TemplateType'] = ApiClient.convertToType(data['TemplateType'], 'String');
      }
      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('DateAdded')) {
        obj['DateAdded'] = ApiClient.convertToType(data['DateAdded'], 'Date');
      }
      if (data.hasOwnProperty('FromEmail')) {
        obj['FromEmail'] = ApiClient.convertToType(data['FromEmail'], 'String');
      }
      if (data.hasOwnProperty('FromName')) {
        obj['FromName'] = ApiClient.convertToType(data['FromName'], 'String');
      }
      if (data.hasOwnProperty('Body')) {
        obj['Body'] = Body.constructFromObject(data['Body']);
      }
      if (data.hasOwnProperty('OriginalTemplateName')) {
        obj['OriginalTemplateName'] = ApiClient.convertToType(data['OriginalTemplateName'], 'String');
      }
      if (data.hasOwnProperty('TemplateScope')) {
        obj['TemplateScope'] = ApiClient.convertToType(data['TemplateScope'], 'String');
      }
    }
    return obj;
  }

  /**
   * 0 for API connections
   * @member {module:model/Template.TemplateTypeEnum} TemplateType
   */
  exports.prototype['TemplateType'] = undefined;
  /**
   * Filename
   * @member {String} Name
   */
  exports.prototype['Name'] = undefined;
  /**
   * Date of creation in YYYY-MM-DDThh:ii:ss format
   * @member {Date} DateAdded
   */
  exports.prototype['DateAdded'] = undefined;
  /**
   * Default From: email address.
   * @member {String} FromEmail
   */
  exports.prototype['FromEmail'] = undefined;
  /**
   * Default From: name.
   * @member {String} FromName
   */
  exports.prototype['FromName'] = undefined;
  /**
   * @member {module:model/Body} Body
   */
  exports.prototype['Body'] = undefined;
  /**
   * @member {String} OriginalTemplateName
   */
  exports.prototype['OriginalTemplateName'] = undefined;
  /**
   * Enum: 0 - private, 1 - public, 2 - mockup
   * @member {module:model/Template.TemplateScopeEnum} TemplateScope
   */
  exports.prototype['TemplateScope'] = undefined;


  /**
   * Allowed values for the <code>TemplateType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TemplateTypeEnum = {
    /**
     * value: "RawHTML"
     * @const
     */
    "RawHTML": "RawHTML",
    /**
     * value: "DragDropEditor"
     * @const
     */
    "DragDropEditor": "DragDropEditor"  };

  /**
   * Allowed values for the <code>TemplateScope</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TemplateScopeEnum = {
    /**
     * value: "Private"
     * @const
     */
    "Private": "Private",
    /**
     * value: "Public"
     * @const
     */
    "Public": "Public",
    /**
     * value: "Draft"
     * @const
     */
    "Draft": "Draft"  };


  return exports;
}));



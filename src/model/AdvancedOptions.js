/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ElasticemailRestfulApi) {
      root.ElasticemailRestfulApi = {};
    }
    root.ElasticemailRestfulApi.AdvancedOptions = factory(root.ElasticemailRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AdvancedOptions model module.
   * @module model/AdvancedOptions
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>AdvancedOptions</code>.
   * Lists advanced sending options of your account.
   * @alias module:model/AdvancedOptions
   * @class
   * @param enableClickTracking {Boolean} True, if you want to track clicks. Otherwise, false
   * @param enableLinkClickTracking {Boolean} True, if you want to track by link tracking. Otherwise, false
   * @param enableTemplateScripting {Boolean} True, if you want to use template scripting in your emails {{}}. Otherwise, false
   * @param autoTextFormat {Boolean} True, if text BODY of message should be created automatically. Otherwise, false
   * @param emailNotificationForError {Boolean} True, if you want bounce notifications returned. Otherwise, false
   * @param lowCreditNotification {Boolean} True, if you want to receive low credit email notifications. Otherwise, false
   * @param isSubAccount {Boolean} True, if this account is a sub-account. Otherwise, false
   * @param isOwnedByReseller {Boolean} True, if this account resells Elastic Email. Otherwise, false.
   * @param enableUnsubscribeHeader {Boolean} True, if you want to enable list-unsubscribe header. Otherwise, false
   * @param manageSubscriptions {Boolean} True, if you want to display your labels on your unsubscribe form. Otherwise, false
   * @param manageSubscribedOnly {Boolean} True, if you want to only display labels that the contact is subscribed to on your unsubscribe form. Otherwise, false
   * @param transactionalOnUnsubscribe {Boolean} True, if you want to display an option for the contact to opt into transactional email only on your unsubscribe form. Otherwise, false
   * @param consentTrackingOnUnsubscribe {Boolean} 
   * @param previewMessageID {String} 
   * @param allowCustomHeaders {Boolean} True, if you want to apply custom headers to your emails. Otherwise, false
   * @param bccEmail {String} Email address to send a copy of all email to.
   * @param contentTransferEncoding {String} Type of content encoding
   * @param emailNotification {String} True, if you want to receive bounce email notifications. Otherwise, false
   * @param notificationsEmails {String} Email addresses to send a copy of all notifications from our system. Separated by semicolon
   * @param unsubscribeNotificationEmails {String} Emails, separated by semicolon, to which the notification about contact unsubscribing should be sent to
   * @param enableUITooltips {Boolean} True, if account has tooltips active. Otherwise, false
   * @param enableContactFeatures {Boolean} True, if you want to use Contact Delivery Tools.  Otherwise, false
   * @param logoUrl {String} URL to your logo image.
   * @param staleContactScore {Number} (0 means this functionality is NOT enabled) Score, depending on the number of times you have sent to a recipient, at which the given recipient should be moved to the Stale status
   * @param staleContactInactiveDays {Number} (0 means this functionality is NOT enabled) Number of days of inactivity for a contact after which the given recipient should be moved to the Stale status
   * @param deliveryReason {String} Why your clients are receiving your emails.
   */
  var exports = function(enableClickTracking, enableLinkClickTracking, enableTemplateScripting, autoTextFormat, emailNotificationForError, lowCreditNotification, isSubAccount, isOwnedByReseller, enableUnsubscribeHeader, manageSubscriptions, manageSubscribedOnly, transactionalOnUnsubscribe, consentTrackingOnUnsubscribe, previewMessageID, allowCustomHeaders, bccEmail, contentTransferEncoding, emailNotification, notificationsEmails, unsubscribeNotificationEmails, enableUITooltips, enableContactFeatures, logoUrl, staleContactScore, staleContactInactiveDays, deliveryReason) {
    var _this = this;

    _this['EnableClickTracking'] = enableClickTracking;
    _this['EnableLinkClickTracking'] = enableLinkClickTracking;
    _this['EnableTemplateScripting'] = enableTemplateScripting;
    _this['AutoTextFormat'] = autoTextFormat;
    _this['EmailNotificationForError'] = emailNotificationForError;
    _this['LowCreditNotification'] = lowCreditNotification;
    _this['IsSubAccount'] = isSubAccount;
    _this['IsOwnedByReseller'] = isOwnedByReseller;
    _this['EnableUnsubscribeHeader'] = enableUnsubscribeHeader;
    _this['ManageSubscriptions'] = manageSubscriptions;
    _this['ManageSubscribedOnly'] = manageSubscribedOnly;
    _this['TransactionalOnUnsubscribe'] = transactionalOnUnsubscribe;
    _this['ConsentTrackingOnUnsubscribe'] = consentTrackingOnUnsubscribe;
    _this['PreviewMessageID'] = previewMessageID;
    _this['AllowCustomHeaders'] = allowCustomHeaders;
    _this['BccEmail'] = bccEmail;
    _this['ContentTransferEncoding'] = contentTransferEncoding;
    _this['EmailNotification'] = emailNotification;
    _this['NotificationsEmails'] = notificationsEmails;
    _this['UnsubscribeNotificationEmails'] = unsubscribeNotificationEmails;
    _this['EnableUITooltips'] = enableUITooltips;
    _this['EnableContactFeatures'] = enableContactFeatures;
    _this['LogoUrl'] = logoUrl;
    _this['StaleContactScore'] = staleContactScore;
    _this['StaleContactInactiveDays'] = staleContactInactiveDays;
    _this['DeliveryReason'] = deliveryReason;

  };

  /**
   * Constructs a <code>AdvancedOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AdvancedOptions} obj Optional instance to populate.
   * @return {module:model/AdvancedOptions} The populated <code>AdvancedOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('EnableClickTracking')) {
        obj['EnableClickTracking'] = ApiClient.convertToType(data['EnableClickTracking'], 'Boolean');
      }
      if (data.hasOwnProperty('EnableLinkClickTracking')) {
        obj['EnableLinkClickTracking'] = ApiClient.convertToType(data['EnableLinkClickTracking'], 'Boolean');
      }
      if (data.hasOwnProperty('EnableTemplateScripting')) {
        obj['EnableTemplateScripting'] = ApiClient.convertToType(data['EnableTemplateScripting'], 'Boolean');
      }
      if (data.hasOwnProperty('AutoTextFormat')) {
        obj['AutoTextFormat'] = ApiClient.convertToType(data['AutoTextFormat'], 'Boolean');
      }
      if (data.hasOwnProperty('EmailNotificationForError')) {
        obj['EmailNotificationForError'] = ApiClient.convertToType(data['EmailNotificationForError'], 'Boolean');
      }
      if (data.hasOwnProperty('LowCreditNotification')) {
        obj['LowCreditNotification'] = ApiClient.convertToType(data['LowCreditNotification'], 'Boolean');
      }
      if (data.hasOwnProperty('IsSubAccount')) {
        obj['IsSubAccount'] = ApiClient.convertToType(data['IsSubAccount'], 'Boolean');
      }
      if (data.hasOwnProperty('IsOwnedByReseller')) {
        obj['IsOwnedByReseller'] = ApiClient.convertToType(data['IsOwnedByReseller'], 'Boolean');
      }
      if (data.hasOwnProperty('EnableUnsubscribeHeader')) {
        obj['EnableUnsubscribeHeader'] = ApiClient.convertToType(data['EnableUnsubscribeHeader'], 'Boolean');
      }
      if (data.hasOwnProperty('ManageSubscriptions')) {
        obj['ManageSubscriptions'] = ApiClient.convertToType(data['ManageSubscriptions'], 'Boolean');
      }
      if (data.hasOwnProperty('ManageSubscribedOnly')) {
        obj['ManageSubscribedOnly'] = ApiClient.convertToType(data['ManageSubscribedOnly'], 'Boolean');
      }
      if (data.hasOwnProperty('TransactionalOnUnsubscribe')) {
        obj['TransactionalOnUnsubscribe'] = ApiClient.convertToType(data['TransactionalOnUnsubscribe'], 'Boolean');
      }
      if (data.hasOwnProperty('ConsentTrackingOnUnsubscribe')) {
        obj['ConsentTrackingOnUnsubscribe'] = ApiClient.convertToType(data['ConsentTrackingOnUnsubscribe'], 'Boolean');
      }
      if (data.hasOwnProperty('PreviewMessageID')) {
        obj['PreviewMessageID'] = ApiClient.convertToType(data['PreviewMessageID'], 'String');
      }
      if (data.hasOwnProperty('AllowCustomHeaders')) {
        obj['AllowCustomHeaders'] = ApiClient.convertToType(data['AllowCustomHeaders'], 'Boolean');
      }
      if (data.hasOwnProperty('BccEmail')) {
        obj['BccEmail'] = ApiClient.convertToType(data['BccEmail'], 'String');
      }
      if (data.hasOwnProperty('ContentTransferEncoding')) {
        obj['ContentTransferEncoding'] = ApiClient.convertToType(data['ContentTransferEncoding'], 'String');
      }
      if (data.hasOwnProperty('EmailNotification')) {
        obj['EmailNotification'] = ApiClient.convertToType(data['EmailNotification'], 'String');
      }
      if (data.hasOwnProperty('NotificationsEmails')) {
        obj['NotificationsEmails'] = ApiClient.convertToType(data['NotificationsEmails'], 'String');
      }
      if (data.hasOwnProperty('UnsubscribeNotificationEmails')) {
        obj['UnsubscribeNotificationEmails'] = ApiClient.convertToType(data['UnsubscribeNotificationEmails'], 'String');
      }
      if (data.hasOwnProperty('EnableUITooltips')) {
        obj['EnableUITooltips'] = ApiClient.convertToType(data['EnableUITooltips'], 'Boolean');
      }
      if (data.hasOwnProperty('EnableContactFeatures')) {
        obj['EnableContactFeatures'] = ApiClient.convertToType(data['EnableContactFeatures'], 'Boolean');
      }
      if (data.hasOwnProperty('LogoUrl')) {
        obj['LogoUrl'] = ApiClient.convertToType(data['LogoUrl'], 'String');
      }
      if (data.hasOwnProperty('StaleContactScore')) {
        obj['StaleContactScore'] = ApiClient.convertToType(data['StaleContactScore'], 'Number');
      }
      if (data.hasOwnProperty('StaleContactInactiveDays')) {
        obj['StaleContactInactiveDays'] = ApiClient.convertToType(data['StaleContactInactiveDays'], 'Number');
      }
      if (data.hasOwnProperty('DeliveryReason')) {
        obj['DeliveryReason'] = ApiClient.convertToType(data['DeliveryReason'], 'String');
      }
      if (data.hasOwnProperty('TutorialsEnabled')) {
        obj['TutorialsEnabled'] = ApiClient.convertToType(data['TutorialsEnabled'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * True, if you want to track clicks. Otherwise, false
   * @member {Boolean} EnableClickTracking
   */
  exports.prototype['EnableClickTracking'] = undefined;
  /**
   * True, if you want to track by link tracking. Otherwise, false
   * @member {Boolean} EnableLinkClickTracking
   */
  exports.prototype['EnableLinkClickTracking'] = undefined;
  /**
   * True, if you want to use template scripting in your emails {{}}. Otherwise, false
   * @member {Boolean} EnableTemplateScripting
   */
  exports.prototype['EnableTemplateScripting'] = undefined;
  /**
   * True, if text BODY of message should be created automatically. Otherwise, false
   * @member {Boolean} AutoTextFormat
   */
  exports.prototype['AutoTextFormat'] = undefined;
  /**
   * True, if you want bounce notifications returned. Otherwise, false
   * @member {Boolean} EmailNotificationForError
   */
  exports.prototype['EmailNotificationForError'] = undefined;
  /**
   * True, if you want to receive low credit email notifications. Otherwise, false
   * @member {Boolean} LowCreditNotification
   */
  exports.prototype['LowCreditNotification'] = undefined;
  /**
   * True, if this account is a sub-account. Otherwise, false
   * @member {Boolean} IsSubAccount
   */
  exports.prototype['IsSubAccount'] = undefined;
  /**
   * True, if this account resells Elastic Email. Otherwise, false.
   * @member {Boolean} IsOwnedByReseller
   */
  exports.prototype['IsOwnedByReseller'] = undefined;
  /**
   * True, if you want to enable list-unsubscribe header. Otherwise, false
   * @member {Boolean} EnableUnsubscribeHeader
   */
  exports.prototype['EnableUnsubscribeHeader'] = undefined;
  /**
   * True, if you want to display your labels on your unsubscribe form. Otherwise, false
   * @member {Boolean} ManageSubscriptions
   */
  exports.prototype['ManageSubscriptions'] = undefined;
  /**
   * True, if you want to only display labels that the contact is subscribed to on your unsubscribe form. Otherwise, false
   * @member {Boolean} ManageSubscribedOnly
   */
  exports.prototype['ManageSubscribedOnly'] = undefined;
  /**
   * True, if you want to display an option for the contact to opt into transactional email only on your unsubscribe form. Otherwise, false
   * @member {Boolean} TransactionalOnUnsubscribe
   */
  exports.prototype['TransactionalOnUnsubscribe'] = undefined;
  /**
   * @member {Boolean} ConsentTrackingOnUnsubscribe
   */
  exports.prototype['ConsentTrackingOnUnsubscribe'] = undefined;
  /**
   * @member {String} PreviewMessageID
   */
  exports.prototype['PreviewMessageID'] = undefined;
  /**
   * True, if you want to apply custom headers to your emails. Otherwise, false
   * @member {Boolean} AllowCustomHeaders
   */
  exports.prototype['AllowCustomHeaders'] = undefined;
  /**
   * Email address to send a copy of all email to.
   * @member {String} BccEmail
   */
  exports.prototype['BccEmail'] = undefined;
  /**
   * Type of content encoding
   * @member {String} ContentTransferEncoding
   */
  exports.prototype['ContentTransferEncoding'] = undefined;
  /**
   * True, if you want to receive bounce email notifications. Otherwise, false
   * @member {String} EmailNotification
   */
  exports.prototype['EmailNotification'] = undefined;
  /**
   * Email addresses to send a copy of all notifications from our system. Separated by semicolon
   * @member {String} NotificationsEmails
   */
  exports.prototype['NotificationsEmails'] = undefined;
  /**
   * Emails, separated by semicolon, to which the notification about contact unsubscribing should be sent to
   * @member {String} UnsubscribeNotificationEmails
   */
  exports.prototype['UnsubscribeNotificationEmails'] = undefined;
  /**
   * True, if account has tooltips active. Otherwise, false
   * @member {Boolean} EnableUITooltips
   */
  exports.prototype['EnableUITooltips'] = undefined;
  /**
   * True, if you want to use Contact Delivery Tools.  Otherwise, false
   * @member {Boolean} EnableContactFeatures
   */
  exports.prototype['EnableContactFeatures'] = undefined;
  /**
   * URL to your logo image.
   * @member {String} LogoUrl
   */
  exports.prototype['LogoUrl'] = undefined;
  /**
   * (0 means this functionality is NOT enabled) Score, depending on the number of times you have sent to a recipient, at which the given recipient should be moved to the Stale status
   * @member {Number} StaleContactScore
   */
  exports.prototype['StaleContactScore'] = undefined;
  /**
   * (0 means this functionality is NOT enabled) Number of days of inactivity for a contact after which the given recipient should be moved to the Stale status
   * @member {Number} StaleContactInactiveDays
   */
  exports.prototype['StaleContactInactiveDays'] = undefined;
  /**
   * Why your clients are receiving your emails.
   * @member {String} DeliveryReason
   */
  exports.prototype['DeliveryReason'] = undefined;
  /**
   * True, if you want to enable Dashboard Tutotials
   * @member {Boolean} TutorialsEnabled
   */
  exports.prototype['TutorialsEnabled'] = undefined;



  return exports;
}));



/**
 * elasticemail_Restful_api
 * Send your emails with ElasticEmail API
 *
 * OpenAPI spec version: 3.0.0b
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ElasticemailRestfulApi);
  }
}(this, function(expect, ElasticemailRestfulApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ElasticemailRestfulApi.AccountCore();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountCore', function() {
    it('should create an instance of AccountCore', function() {
      // uncomment below and update the code to test AccountCore
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be.a(ElasticemailRestfulApi.AccountCore);
    });

    it('should have the property publicAccountID (base name: "PublicAccountID")', function() {
      // uncomment below and update the code to test the property publicAccountID
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property apiKey (base name: "ApiKey")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property isSub (base name: "IsSub")', function() {
      // uncomment below and update the code to test the property isSub
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property isUser (base name: "IsUser")', function() {
      // uncomment below and update the code to test the property isUser
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property statusNumber (base name: "StatusNumber")', function() {
      // uncomment below and update the code to test the property statusNumber
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property statusFormatted (base name: "StatusFormatted")', function() {
      // uncomment below and update the code to test the property statusFormatted
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property paymentFormUrl (base name: "PaymentFormUrl")', function() {
      // uncomment below and update the code to test the property paymentFormUrl
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property enablePrivateBranding (base name: "EnablePrivateBranding")', function() {
      // uncomment below and update the code to test the property enablePrivateBranding
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property supportLink (base name: "SupportLink")', function() {
      // uncomment below and update the code to test the property supportLink
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property privateBrandingUrl (base name: "PrivateBrandingUrl")', function() {
      // uncomment below and update the code to test the property privateBrandingUrl
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property affiliateLink (base name: "AffiliateLink")', function() {
      // uncomment below and update the code to test the property affiliateLink
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property monthlyEmailsSent (base name: "MonthlyEmailsSent")', function() {
      // uncomment below and update the code to test the property monthlyEmailsSent
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property emailCredits (base name: "EmailCredits")', function() {
      // uncomment below and update the code to test the property emailCredits
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property pricePerEmail (base name: "PricePerEmail")', function() {
      // uncomment below and update the code to test the property pricePerEmail
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property accountPaymentUrl (base name: "AccountPaymentUrl")', function() {
      // uncomment below and update the code to test the property accountPaymentUrl
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property smtp (base name: "Smtp")', function() {
      // uncomment below and update the code to test the property smtp
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property smtpAlternative (base name: "SmtpAlternative")', function() {
      // uncomment below and update the code to test the property smtpAlternative
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property autoCreditStatus (base name: "AutoCreditStatus")', function() {
      // uncomment below and update the code to test the property autoCreditStatus
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property autoCreditLevel (base name: "AutoCreditLevel")', function() {
      // uncomment below and update the code to test the property autoCreditLevel
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property autoCreditAmount (base name: "AutoCreditAmount")', function() {
      // uncomment below and update the code to test the property autoCreditAmount
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property dailySendLimit (base name: "DailySendLimit")', function() {
      // uncomment below and update the code to test the property dailySendLimit
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "DateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property linkTracking (base name: "LinkTracking")', function() {
      // uncomment below and update the code to test the property linkTracking
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property contentTransferEncoding (base name: "ContentTransferEncoding")', function() {
      // uncomment below and update the code to test the property contentTransferEncoding
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

    it('should have the property needsSMSVerification (base name: "NeedsSMSVerification")', function() {
      // uncomment below and update the code to test the property needsSMSVerification
      //var instane = new ElasticemailRestfulApi.AccountCore();
      //expect(instance).to.be();
    });

  });

}));
